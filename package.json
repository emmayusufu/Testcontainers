{
  "name": "testcontainer-nodejs",
  "version": "1.0.0",
  "description": "This repository demonstrates how to **automate integration testing** in **Node.js** using **Testcontainers**. By leveraging **Dockerized services** (such as PostgreSQL in this case), you can spin up isolated environments for your tests, ensuring that your tests are **clean**, **repeatable**, and **reliable**. Testcontainers takes care of setting up and tearing down external dependencies like databases, so you can focus on writing tests without worrying about environment management.",
  "main": "index.js",
  "scripts": {
    "dev": "node --import tsx --watch src/server.ts",
    "up": "docker compose -f docker-compose.yaml up",
    "down": "docker compose -f docker-compose.yaml down -v",
    "test": "node --import tsx --test src/app.test.ts"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@testcontainers/postgresql": "^10.16.0",
    "@testcontainers/redis": "^10.16.0",
    "@types/express": "^4.17.21",
    "@types/node": "^22.10.2",
    "@types/pg": "^8.11.10",
    "jest": "^29.7.0",
    "nodemon": "^3.1.9",
    "supertest": "^7.0.0",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.2",
    "typescript": "^5.7.2"
  },
  "dependencies": {
    "express": "^4.21.2",
    "pg": "^8.13.1",
    "redis": "^4.7.0"
  }
}
